@using CodeMechanic.Types
@using Newtonsoft.Json
@using OrchardCore.Models
@using OrchardCore.Services
@model List<CalendarEvent>
@inject ICalendarEventService calendar
@{
    //https://chrisfrew.in/blog/serializing-and-deserializing-to-iso-8601-in-dotnet/


    var calendar_events = @Model
        // .Dump("events")
        ;


    if (@calendar_events.Count == 0)
    {
        // This is useful on the refresh
        calendar_events = (await calendar.GetAll()).ToList();
    }

    // Maps to the format that Schedule understands
    var mapped_events = calendar_events.Select(ev => ev
        .Map(e => new
        {
            id = e.id,
            title = e.event_name,
            start = e.start_date,
            allDay = true
        }))
        .ToArray();


    string json = JsonConvert.SerializeObject(mapped_events);
    // Console.WriteLine("json :>> " + json);

    // We must treat the events as Raw HTML after serialization:
    var data = @Html.Raw(@json);


}


<section>

    <div id="calendar">
    </div>
    
    <script>
         
            document.addEventListener("DOMContentLoaded", generate_calendar(@data)); 
        
        </script>

</section>


@* OLD CALENDAR 


document.addEventListener('DOMContentLoaded', function() {
        var calendarEl = document.getElementById('calendar');
        var data = @Html.Raw(@json);
        var calendar = new FullCalendar.Calendar(calendarEl, {
            // defaultView: 'agendaWeek',
            initialView: 'dayGridMonth',
            timeZone: 'UTC',
            events: data,
         });
        
        calendar.on('dateClick', function(info) {
             console.log('Clicked on: ' + info.dateStr);
             console.log('Coordinates: ' + info.jsEvent.pageX + ',' + info.jsEvent.pageY);
             console.log('Current view: ' + info.view.type);
                    
            edits_enabled = true;
            let event_selected = {
                date: info.dateStr
            }
            selected_event = event_selected;
        });
        
        
        function render_calendar() {
            console.log('rendering calendar ...');
            calendar.render();
        }
        render_calendar();
*@

@* SCRAPS *@
@* *@
@* // function add_htmx_attributes(element) { *@
@* //     element.setAttribute("hx-get", ""); *@
@* //     element.setAttribute("hx-target", '#result'); *@
@* //     element.setAttribute("hx-page", 'Index'); *@
@* //     element.setAttribute("hx-page-handler", 'RepaintCalendar'); *@
@* // } *@


@*     *@
@* function refresh_calendar() { *@
@*                      *@
@* console.log('Running a refresh!'); *@
@*              *@
@* // let events = data; *@
@*              *@
@* // var events = { *@
@* //     url: "ajax/getMyEvents.php", *@
@* //     type: 'POST', *@
@* //     data: { *@
@* //         user_id: $(this).val() *@
@* //     } *@
@* // } *@
@*          *@
@* $('#calendar').fullCalendar('removeEventSource', data); *@
@* $('#calendar').fullCalendar('addEventSource', data); *@
@* $('#calendar').fullCalendar('refetchEvents'); *@
@* } *@

@* *@
@*     *@
@* // var addeventbtnEl = document.getElementsByClassName( 'fc-addEventButton-button fc-button fc-button-primary')[0] *@
@* *@
@* // add_htmx_attributes(addeventbtnEl) *@
@* // window.render= render_calendar; *@
@* // window.add_htmx_attributes = add_htmx_attributes; *@
@*       *@
@*          *@
@* // https://stackoverflow.com/questions/18727954/how-to-reload-fullcalendar-contact-when-the-value-of-a-menu-change-using-jquery *@
@* $('#users_menu').change(refresh_calendar).change(); *@