@using Htmx.TagHelpers
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using OrchardCore
@using OrchardCore.Models
@using OrchardCore.Services
@using CodeMechanic.Types
@inject ICalendarEventService calendar
@{
    // Layout = "_Layout";
    var count = 0;
    var calendar_event_count = await calendar.CountExistingEvents();

    if (calendar_event_count == 0)
        await calendar.SeedCalendar(30);

    var all_events = (await calendar.GetAll())
        .OrderByDescending(ev => ev.status)
        .ToList();

    Console.WriteLine("Total event count :>> " + all_events.Count);

    var published_events = all_events
        .Where(ev => ev.status.Equals(CalendarEventStatus.Published.Name))
        .OrderByDescending(ev => ev.status)
        .ToList();

    Console.WriteLine("Total published events :>> " + published_events.Count);

    var current_event = all_events.FirstOrDefault();
    var ui_settings = new UISettings() { CurrentTheme = "forest" };

    string url = Context.Request.Path;
    var page_name = url.GetPageFromRoute();

    // I'm doing this to re-use calendarview and not mess up the HTMX (ajax) calls or have to repeat the work.
    // This could obviously be replaced by some auth method, but I don't know what.
    bool is_admin = @page_name.Equals("admin", StringComparison.OrdinalIgnoreCase);
    bool debug_mode = Environment.GetEnvironmentVariable("DEV_MODE").ToBoolean(fallback: false);

}

<div
    x-data="setup()"
    class=""
    style="margin-top:100px;">

    <div
        class="flex flex-row gap-2">

        <section class="w-2/3 margin-8">

            <div role="tablist" class="tabs tabs-boxed">

                <div class="flex flex-row items-center justify-center gap-2">
                    <template x-for="tab in tabs">
                        <a role="tab.role"
                           x-on:click="on_tab_click(tab.name)"
                           x-text="tab.name" :class="tab.classname">
                        </a>
                    </template>

                </div>

            </div>

            <div x-show="current_tab.name==='Calendar'">
                <div id="calendar_container">
                    <partial name="_OrchardCalendar" model="@is_admin ?  @all_events : @published_events"/>
                </div>
            </div>

            <div x-show="current_tab.name==='Event List'">
                <partial name="_OrchardEventList" model="@is_admin ?  @all_events : @published_events"/>
            </div>

        </section>

        <section class="w-1/3 margin-8">

            <join>

                @if (@is_admin)
                {
                    <button class="btn join-item"
                            x-on:click="options_panel.add_button.show=!options_panel.add_button.show"
                            hx-get
                            hx-target="#create_form"
                            :class="options_panel.add_button.classname"
                            hx-controller="Admin"
                            hx-action="OnGetCreateForm">
                        Add
                    </button>
                }

                <button class="btn join-item"
                        :class="options_panel.ui_settings_button.classname"
                        js x-on:click="options_panel.ui_settings_button.show=!options_panel.ui_settings_button.show">
                    UI Settings
                </button>

                @if (@is_admin)
                {
                    <button class="btn join-item"
                            :class="options_panel.danger_button.classname"
                            js x-on:click="options_panel.danger_button.show=!options_panel.danger_button.show">
                        Danger Zone
                    </button>
                }


            </join>

            <div id="create_form">
                <span x-show="options_panel.add_button.show">
                    <partial name="_CreateEventForm" model="@current_event"></partial>
                </span>
            </div>

            <div id="ui_settings"
                 x-show="options_panel.ui_settings_button.show">
                <partial name="_UI_Settings_Panel" model="@ui_settings"></partial>
            </div>

            @* DANGER ZONE PANEL *@
            <div x-show="options_panel.danger_button.show" class="border-error border-2">
                <partial name="_DangerZonePanel"/>
            </div>


            @* <template x-for="snack in snacks"> *@
            @*     <div class="flex flex-row"> *@
            @*         <h2 x-text="snack.name"></h2> *@
            @*         <button *@
            @*             class="btn btn-small btn-ghost" *@
            @*             x-on:click="snack.streak = confirm('Did you miss one?', 'Yes', 'Nope!') ? 0: snack.streak"> *@
            @*             ðŸ‘‡ *@
            @*         </button> *@
            @*         <p x-text="snack.streak"></p> *@
            @*         <button *@
            @*             x-on:click="snack.streak++" *@
            @*             class="btn btn-small btn-ghost"> *@
            @*             ðŸ‘† *@
            @*         </button> *@
            @*     </div> *@
            @* </template> *@
        </section>

    </div>

</div>

<script>
function setup(){
    return {
       current_calendar_mode: 'Week',
       // snacks: Alpine.$persist([{ name: "Eggs", streak: 0 }]),
       current_tab: {
            role:'tab', 
            name: 'Calendar',
            active: true
       },
       
       on_tab_click(tab_name ='sometab', debug=false) {
           
           // find tab
           !!debug && console.log("clicked tab " + tab_name);
          this.current_tab = this.tabs.find(t=>t.name === tab_name);
            !!debug &&  console.log('tabs : ', this.tabs.length);
          !!debug &&   console.log('found : ', this?.current_tab?.name);
           let others = this.tabs.filter(t=>t.name !== tab_name).map(x=>x.active=false);
           !!debug &&  console.log(others);
           !!debug &&  console.log(current_tab);
           
           // update tab
          this.current_tab.active=true;
          
       },
       
       tabs: [
           {
                role:'tab', 
                name: 'Calendar',
                partial_name: '_EventCalendar',
                active:true, 
                get classname() {return this.active ? "tab tab-active" : "tab"}
           },
           {
                role:'tab',
                name: 'Event List',
                active: false,
                partial_name: 'HydroEventList',
                get classname() {return this.active ? "tab tab-active" : "tab"}
           },
           // class="tab tab-active"
       ],
       edits_enabled: true,
       date_value: Date.now, 
       next_event: {
           title: '',
           Description: '',
           start: Date.now,
           allDay: true
       },
       selected_event: {},
       current_handler: 'SaveEvent',
       current_target: '#calendar_container',
       
       // experimental
       // ui_settings_panel: {
       //     toggles: {
       //           show_calendar_views: true,
       //           show_current_render: true,
       //       }
       //  },
       options_panel: {
            // Reactive options for buttons in the option panel
           ui_settings_button: {
               show: false,
                get classname() {
                 return this.show ? 'btn btn-secondary join-item' : 'btn join-item'
                }
              },
           danger_button: {
            show: false,
             get classname() {
              return this.show ? 'btn btn-secondary join-item' : 'btn join-item'
             }
           },
           add_button: {
              show: false,
              get classname() {
               return this.show ? 'btn btn-secondary join-item' : 'btn join-item'
              }
           }
       },
     
   }    
}
</script>

<style>
    #mainNav{
        background: black;
    }
</style>